AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Japanese Word Of The Day'

# Global variables
Globals:
  Function:
    Timeout: 60

Resources:

  # Lambda Function 1: Post New Word
  PostNewWord:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      - AWSLambdaExecute
      - AmazonS3FullAccess
      - Statement:
        - Sid: SSMGetParametersPolicy
          Effect: Allow
          Action:
          - ssm:GetParameters
          Resource: '*'
      Tags:
        ProjectTag: TweepyApp

  # Lambd Function 2: Update Database
  UpdateJapaneseWordDatabase:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updatedatabase.update_database_with_new_data
      Runtime: python3.8
      Policies:
      - AmazonDynamoDBFullAccess
      - AWSLambdaExecute
      - AmazonS3FullAccess
      - Statement:
        - Sid: SSMGetParametersPolicy
          Effect: Allow
          Action:
          - ssm:GetParameters
          Resource: '*'
      Events:
        NewWordsAddedEvent:
          Type: S3
          Properties:
            Bucket:
              Ref: SrcBucket
            Events: s3:ObjectCreated:*
            
  # Event for file uploaded to S3          
  AppEventUploadNewWords:
      Type: AWS::Events::Rule
      Properties:
        Description: An event triggered when a file is uploaded to the s3 bucket
        Name: FileUploadedToS3BucketEvent
        State: ENABLED
        EventPattern: 
          source: 
            - "aws.s3"
        Targets:
          -
            Arn:
              Fn::GetAtt:
                - "UpdateJapaneseWordDatabase"
                - "Arn"
            Id: "UpdateJapaneseWordDatabase"

  # Once daily event to trigger Lambda Function 1
  AppEventPostNewWord:
      Type: AWS::Events::Rule
      Properties:
        Description: A scheduled event to post a new word
        Name: OnceDailyScheduleEventPostNewWord
        ScheduleExpression: "cron(0 10 * * ? *)"
        State: ENABLED
        Targets:
          -
            Arn:
              Fn::GetAtt:
                - "PostNewWord"
                - "Arn"
            Id: "PostNewWord"

  PermissionForAppEventPostNewWord: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "PostNewWord"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "AppEventPostNewWord"
          - "Arn"

  # DynamoDB Table
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: 'TwitterBotJapaneseWordDB'
      AttributeDefinitions: 
        - AttributeName: wordid
          AttributeType: S
        - AttributeName: wordtype
          AttributeType: S
      KeySchema:
        - AttributeName: wordid
          KeyType: HASH
        - AttributeName: wordtype
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # S3 Bucket
  SrcBucket:
    Type: AWS::S3::Bucket
    Properties:
          BucketName: 'twitter-bot-japanese-daily-word-s3'
          BucketEncryption: 
            ServerSideEncryptionConfiguration: 
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
          PublicAccessBlockConfiguration:
            BlockPublicAcls : true
            BlockPublicPolicy : true
            IgnorePublicAcls : true
            RestrictPublicBuckets : true